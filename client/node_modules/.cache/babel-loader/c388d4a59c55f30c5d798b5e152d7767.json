{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tamima\\\\181-115-131\\\\client\\\\src\\\\components\\\\mainpages\\\\categories\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport './category.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Categories() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [categories, setCategories] = state.categoriesAPI.categories;\n  const [category, setCategory] = useState('');\n  const [token] = state.token; // const [callback, setCallback] = state.categoriesAPI.callback\n  // const [onEdit, setOnEdit] = useState(false)\n  // const [id, setID] = useState('')\n\n  const createCategory = async e => {\n    e.preventDefault();\n\n    try {\n      // if (onEdit) {\n      {\n        const res = await axios.put(`/api/category`, {\n          name: category\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n        alert(res.data.msg);\n      } // } else {\n      //     const res = await axios.post('/api/category', { name: category }, {\n      //         headers: { Authorization: token }\n      //     })\n      //     alert(res.data.msg)\n      // }\n      // setOnEdit(false)\n      // setCategory('')\n      // setCallback(!callback)\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createCategory,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        value: category,\n        required: true,\n        onChange: e => setCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, category._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Categories, \"hykkNYF1H9jAayMUrD8683TwRLc=\");\n\n_c = Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/Tamima/181-115-131/client/src/components/mainpages/categories/Categories.js"],"names":["React","useState","useContext","GlobalState","axios","Categories","state","categories","setCategories","categoriesAPI","category","setCategory","token","createCategory","e","preventDefault","res","put","name","headers","Authorization","alert","data","msg","err","response","target","value","map","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,KAAK,GAAGJ,UAAU,CAACC,WAAD,CAAxB;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BF,KAAK,CAACG,aAAN,CAAoBF,UAAxD;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,KAAD,IAAUN,KAAK,CAACM,KAAtB,CAJiC,CAKjC;AACA;AACA;;AAEA,QAAMC,cAAc,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA;AACA;AACI,cAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,eAAX,EAA2B;AAAEC,UAAAA,IAAI,EAAER;AAAR,SAA3B,EAA+C;AAC7DS,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAER;AAAjB;AADoD,SAA/C,CAAlB;AAGAS,QAAAA,KAAK,CAACL,GAAG,CAACM,IAAJ,CAASC,GAAV,CAAL;AACH,OAPD,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,KAlBD,CAkBE,OAAOC,GAAP,EAAY;AACVH,MAAAA,KAAK,CAACG,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBC,GAAnB,CAAL;AACH;AACJ,GAvBD;;AA0BA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEV,cAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAEH,QAA1C;AAAoD,QAAA,QAAQ,MAA5D;AACI,QAAA,QAAQ,EAAEI,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACY,MAAF,CAASC,KAAV;AAD9B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEQpB,UAAU,CAACqB,GAAX,CAAelB,QAAQ,iBACnB;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA,oBAAIA,QAAQ,CAACQ;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAA0BR,QAAQ,CAACmB,GAAnC;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GA7DuBxB,U;;KAAAA,U","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { GlobalState } from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport './category.css'\r\n\r\nexport default function Categories() {\r\n    const state = useContext(GlobalState)\r\n    const [categories, setCategories] = state.categoriesAPI.categories\r\n    const [category, setCategory] = useState('')\r\n    const [token] = state.token\r\n    // const [callback, setCallback] = state.categoriesAPI.callback\r\n    // const [onEdit, setOnEdit] = useState(false)\r\n    // const [id, setID] = useState('')\r\n\r\n    const createCategory = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            // if (onEdit) {\r\n            {\r\n                const res = await axios.put(`/api/category`, { name: category }, {\r\n                    headers: { Authorization: token }\r\n                })\r\n                alert(res.data.msg)\r\n            }\r\n            // } else {\r\n            //     const res = await axios.post('/api/category', { name: category }, {\r\n            //         headers: { Authorization: token }\r\n            //     })\r\n            //     alert(res.data.msg)\r\n            // }\r\n            // setOnEdit(false)\r\n            // setCategory('')\r\n            // setCallback(!callback)\r\n\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"categories\">\r\n            <form onSubmit={createCategory}>\r\n                <label htmlFor=\"category\">Category</label>\r\n                <input type=\"text\" name=\"category\" value={category} required\r\n                    onChange={e => setCategory(e.target.value)} />\r\n\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n\r\n            <div className=\"col\">\r\n                {\r\n                    categories.map(category => (\r\n                        <div className=\"row\" key={category._id}>\r\n                            <p>{category.name}</p>\r\n                            <div>\r\n                                <button >Edit</button>\r\n                                <button >Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}