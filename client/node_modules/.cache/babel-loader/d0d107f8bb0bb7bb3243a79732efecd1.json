{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport default function UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [user, setuser] = useState([]);\n  const [callback, setCallback] = useState(false);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.user.role === 1 ? setIsAdmin(true) : setIsAdmin(false); //  console.log(res)\n\n          setCart(res.data.user.cart);\n        } catch (err) {\n          toast.warn(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      const getHistory = async () => {\n        if (isAdmin) {\n          const res = await axios.get('/api/payment', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setHistory(res.data);\n        } else {\n          const res = await axios.get('/user/history', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setHistory(res.data);\n        }\n      };\n\n      getHistory();\n    }\n  }, [token, callback, isAdmin]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login First\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      toast.warn(\"This product has been added to cart.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory],\n    user: [user, setuser],\n    callback: [callback, setCallback]\n  };\n}\n\n_s(UserAPI, \"Q6kCL+hXF3//2Lg2V8bnDB3YQ0s=\");\n\n_c = UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/Tamima/Perfume-Store/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","ToastContainer","toast","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","user","setuser","callback","setCallback","getUser","res","get","headers","Authorization","data","role","err","warn","response","msg","getHistory","addCart","product","alert","check","every","item","_id","quantity","patch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAJ,EAAW;AACP,YAAMa,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEjB;AAAjB;AAD8B,WAAzB,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAY,UAAAA,GAAG,CAACI,IAAJ,CAAST,IAAT,CAAcU,IAAd,KAAuB,CAAvB,GAA2Bf,UAAU,CAAC,IAAD,CAArC,GAA8CA,UAAU,CAAC,KAAD,CAAxD,CALA,CAMA;;AAEAE,UAAAA,OAAO,CAACQ,GAAG,CAACI,IAAJ,CAAST,IAAT,CAAcJ,IAAf,CAAP;AAEH,SAVD,CAUE,OAAOe,GAAP,EAAY;AACVtB,UAAAA,KAAK,CAACuB,IAAN,CAAWD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAA7B;AACH;AACJ,OAdD;;AAgBAV,MAAAA,OAAO;AAEV;AACJ,GArBQ,EAqBN,CAACb,KAAD,CArBM,CAAT;AAwBAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAJ,EAAW;AACP,YAAMwB,UAAU,GAAG,YAAY;AAC3B,YAAIrB,OAAJ,EAAa;AACT,gBAAMW,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,cAAV,EAA0B;AACxCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEjB;AAAjB;AAD+B,WAA1B,CAAlB;AAIAQ,UAAAA,UAAU,CAACM,GAAG,CAACI,IAAL,CAAV;AAEH,SAPD,MAOO;AAEH,gBAAMJ,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,eAAV,EAA2B;AACzCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEjB;AAAjB;AADgC,WAA3B,CAAlB;AAIAQ,UAAAA,UAAU,CAACM,GAAG,CAACI,IAAL,CAAV;AACH;AAEJ,OAjBD;;AAmBAM,MAAAA,UAAU;AAEb;AACJ,GAxBQ,EAwBN,CAACxB,KAAD,EAAQW,QAAR,EAAkBR,OAAlB,CAxBM,CAAT;;AA2BA,QAAMsB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAC/B,QAAI,CAACzB,QAAL,EAAe,OAAO0B,KAAK,CAAC,oBAAD,CAAZ;AAEf,UAAMC,KAAK,GAAGvB,IAAI,CAACwB,KAAL,CAAWC,IAAI,IAAI;AAC7B,aAAOA,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACK,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAIH,KAAJ,EAAW;AACPtB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAE,GAAGqB,OAAL;AAAcM,QAAAA,QAAQ,EAAE;AAAxB,OAAV,CAAD,CAAP;AAEA,YAAMpC,KAAK,CAACqC,KAAN,CAAY,eAAZ,EAA6B;AAAE5B,QAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,EAAE,GAAGqB,OAAL;AAAcM,UAAAA,QAAQ,EAAE;AAAxB,SAAV;AAAR,OAA7B,EAA+E;AACjFhB,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEjB;AAAjB;AADwE,OAA/E,CAAN;AAIH,KAPD,MAOO;AACHF,MAAAA,KAAK,CAACuB,IAAN,CAAW,sCAAX;AACH;AACJ,GAjBD;;AAoBA,SACI;AAEIpB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CAFd;AAGIC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAHb;AAIIC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAJV;AAKImB,IAAAA,OAAO,EAAEA,OALb;AAMIlB,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CANb;AAOIC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAPV;AAQIC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX;AARd,GADJ;AAmBH;;GAlGuBb,O;;KAAAA,O","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([])\r\n    const [history, setHistory] = useState([])\r\n    const [user, setuser] = useState([])\r\n    const [callback, setCallback] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n                    setIsLogged(true)\r\n                    res.data.user.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n                    //  console.log(res)\r\n\r\n                    setCart(res.data.user.cart)\r\n\r\n                } catch (err) {\r\n                    toast.warn(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n\r\n        }\r\n    }, [token])\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const getHistory = async () => {\r\n                if (isAdmin) {\r\n                    const res = await axios.get('/api/payment', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n\r\n                    setHistory(res.data)\r\n\r\n                } else {\r\n\r\n                    const res = await axios.get('/user/history', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n\r\n                    setHistory(res.data)\r\n                }\r\n\r\n            }\r\n\r\n            getHistory()\r\n\r\n        }\r\n    }, [token, callback, isAdmin])\r\n\r\n\r\n    const addCart = async (product) => {\r\n        if (!isLogged) return alert(\"Please login First\")\r\n\r\n        const check = cart.every(item => {\r\n            return item._id !== product._id\r\n        })\r\n\r\n        if (check) {\r\n            setCart([...cart, { ...product, quantity: 1 }])\r\n\r\n            await axios.patch('/user/addcart', { cart: [...cart, { ...product, quantity: 1 }] }, {\r\n                headers: { Authorization: token }\r\n            })\r\n\r\n        } else {\r\n            toast.warn(\"This product has been added to cart.\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        {\r\n\r\n            isLogged: [isLogged, setIsLogged],\r\n            isAdmin: [isAdmin, setIsAdmin],\r\n            cart: [cart, setCart],\r\n            addCart: addCart,\r\n            history: [history, setHistory],\r\n            user: [user, setuser],\r\n            callback: [callback, setCallback]\r\n\r\n\r\n        }\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}