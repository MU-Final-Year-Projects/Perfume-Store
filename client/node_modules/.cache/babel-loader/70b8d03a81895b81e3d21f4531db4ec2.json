{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false); //  console.log(res)\n\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      const getHistory = async () => {\n        const res = await axios.get('/user/history', {\n          headers: {\n            Authorization: token\n          }\n        });\n        setHistory(res.data);\n      };\n\n      getHistory();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login First\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory]\n  };\n}\n\n_s(UserAPI, \"uZ+AyAeE98XuHy0wOObw3zrE0zM=\");\n\n_c = UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/Tamima/181-115-131/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","getHistory","addCart","product","check","every","item","_id","quantity","patch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([])\r\n    const [history, setHistory] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n\r\n\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n                    //  console.log(res)\r\n\r\n                    setCart(res.data.cart)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n\r\n        }\r\n    }, [token])\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const getHistory = async () => {\r\n\r\n                const res = await axios.get('/user/history', {\r\n                    headers: { Authorization: token }\r\n                })\r\n\r\n                setHistory(res.data)\r\n\r\n            }\r\n\r\n            getHistory()\r\n\r\n        }\r\n    }, [token])\r\n\r\n\r\n    const addCart = async (product) => {\r\n        if (!isLogged) return alert(\"Please login First\")\r\n\r\n        const check = cart.every(item => {\r\n            return item._id !== product._id\r\n        })\r\n\r\n        if (check) {\r\n            setCart([...cart, { ...product, quantity: 1 }])\r\n\r\n            await axios.patch('/user/addcart', { cart: [...cart, { ...product, quantity: 1 }] }, {\r\n                headers: { Authorization: token }\r\n            })\r\n\r\n        } else {\r\n            alert(\"This product has been added to cart.\")\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        cart: [cart, setCart],\r\n        addCart: addCart,\r\n        history: [history, setHistory]\r\n    }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}