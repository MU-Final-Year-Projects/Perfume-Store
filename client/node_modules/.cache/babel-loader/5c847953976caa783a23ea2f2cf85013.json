{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tamima\\\\Perfume-Store\\\\client\\\\src\\\\components\\\\mainpages\\\\cart\\\\PlaceOrder.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport PaypalButton from './PaypalButton';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PlaceOrder = () => {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [cart, setCart] = state.userAPI.cart;\n  const [token] = state.token;\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    const getTotal = () => {\n      const total = cart.reduce((prev, item) => {\n        return prev + item.price * item.quantity;\n      }, 0);\n      setTotal(total);\n    };\n\n    getTotal();\n  }, [cart]);\n\n  const addToCart = async cart => {\n    await axios.patch('/user/addcart', {\n      cart\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  };\n\n  const tranSuccess = async payment => {\n    const {\n      paymentID,\n      address\n    } = payment;\n    await axios.post('/api/payment', {\n      cart,\n      paymentID,\n      address\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    setCart([]);\n    addToCart([]);\n    alert(\"You have successfully placed an order.\");\n  };\n\n  console.log(\"cart : \", cart);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cart.map(product => /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [product.title, \" ----- \", product.quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: total ? total : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#!\",\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PaypalButton, {\n      total: total,\n      tranSuccess: tranSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PaypalButton, {\n      total: total,\n      tranSuccess: tranSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PlaceOrder, \"G3JeC15lvNmKw15RIDDgjAjZnYY=\");\n\n_c = PlaceOrder;\nexport default PlaceOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceOrder\");","map":{"version":3,"sources":["C:/Users/Tamima/Perfume-Store/client/src/components/mainpages/cart/PlaceOrder.js"],"names":["React","useContext","useState","GlobalState","PaypalButton","Link","axios","PlaceOrder","state","cart","setCart","userAPI","token","total","setTotal","useEffect","getTotal","reduce","prev","item","price","quantity","addToCart","patch","headers","Authorization","tranSuccess","payment","paymentID","address","post","alert","console","log","map","product","title"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,KAAK,GAAGP,UAAU,CAACE,WAAD,CAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBF,KAAK,CAACG,OAAN,CAAcF,IAAtC;AACA,QAAM,CAACG,KAAD,IAAUJ,KAAK,CAACI,KAAtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAGAa,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,QAAQ,GAAG,MAAM;AACnB,YAAMH,KAAK,GAAGJ,IAAI,CAACQ,MAAL,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC,eAAOD,IAAI,GAAIC,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,QAAjC;AACH,OAFa,EAEX,CAFW,CAAd;AAIAP,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAND;;AAQAG,IAAAA,QAAQ;AAGX,GAZQ,EAYN,CAACP,IAAD,CAZM,CAAT;;AAcA,QAAMa,SAAS,GAAG,MAAOb,IAAP,IAAgB;AAC9B,UAAMH,KAAK,CAACiB,KAAN,CAAY,eAAZ,EAA6B;AAAEd,MAAAA;AAAF,KAA7B,EAAuC;AACzCe,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEb;AAAjB;AADgC,KAAvC,CAAN;AAGH,GAJD;;AAMA,QAAMc,WAAW,GAAG,MAAOC,OAAP,IAAmB;AAEnC,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBF,OAA/B;AAEA,UAAMrB,KAAK,CAACwB,IAAN,CAAW,cAAX,EAA2B;AAAErB,MAAAA,IAAF;AAAQmB,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB,KAA3B,EAAyD;AAC3DL,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEb;AAAjB;AADkD,KAAzD,CAAN;AAIAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAY,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAS,IAAAA,KAAK,CAAC,wCAAD,CAAL;AAEH,GAZD;;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBxB,IAAvB;AACA,sBACI;AAAA,eAEQA,IAAI,CAACyB,GAAL,CAASC,OAAO,iBACZ;AAAA,iBAAKA,OAAO,CAACC,KAAb,aAA2BD,OAAO,CAACd,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFR,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBAAKR,KAAK,GAAGA,KAAH,GAAW;AAArB;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEA,KADX;AAEI,MAAA,WAAW,EAAEa;AAFjB;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEb,KADX;AAEI,MAAA,WAAW,EAAEa;AAFjB;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AAmBH,CA7DD;;GAAMnB,U;;KAAAA,U;AA+DN,eAAeA,UAAf","sourcesContent":["import { React, useContext, useState } from 'react';\r\nimport { GlobalState } from '../../../GlobalState';\r\nimport PaypalButton from './PaypalButton';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PlaceOrder = () => {\r\n    const state = useContext(GlobalState)\r\n    const [cart, setCart] = state.userAPI.cart\r\n    const [token] = state.token\r\n    const [total, setTotal] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        const getTotal = () => {\r\n            const total = cart.reduce((prev, item) => {\r\n                return prev + (item.price * item.quantity)\r\n            }, 0)\r\n\r\n            setTotal(total)\r\n        }\r\n\r\n        getTotal()\r\n\r\n\r\n    }, [cart])\r\n\r\n    const addToCart = async (cart) => {\r\n        await axios.patch('/user/addcart', { cart }, {\r\n            headers: { Authorization: token }\r\n        })\r\n    }\r\n\r\n    const tranSuccess = async (payment) => {\r\n\r\n        const { paymentID, address } = payment;\r\n\r\n        await axios.post('/api/payment', { cart, paymentID, address }, {\r\n            headers: { Authorization: token }\r\n        })\r\n\r\n        setCart([])\r\n        addToCart([])\r\n        alert(\"You have successfully placed an order.\")\r\n\r\n    }\r\n\r\n    console.log(\"cart : \", cart);\r\n    return (\r\n        <>\r\n            {\r\n                cart.map(product => (\r\n                    <h5>{product.title} ----- {product.quantity}</h5>\r\n                ))\r\n            }\r\n            <hr></hr>\r\n            <h1>{total ? total : null}</h1>\r\n            <hr></hr>\r\n            <Link to=\"#!\">Payment</Link>\r\n            <PaypalButton\r\n                total={total}\r\n                tranSuccess={tranSuccess} />\r\n            <PaypalButton\r\n                total={total}\r\n                tranSuccess={tranSuccess} />\r\n\r\n        </>);\r\n}\r\n\r\nexport default PlaceOrder;\r\n\r\n"]},"metadata":{},"sourceType":"module"}